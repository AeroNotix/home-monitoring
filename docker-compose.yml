version: "3.5"
services:
  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent:v1.96.0
    depends_on:
      - "victoriametrics"
    ports:
      - 8429:8429
    volumes:
      - vmagentdata:/vmagentdata
      - ./victoria/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--promscrape.config=/etc/prometheus/prometheus.yml"
      - "--remoteWrite.url=http://victoriametrics:8428/api/v1/write"
    networks:
      - monitoring
    restart: unless-stopped

  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics:v1.96.0
    ports:
      - 8428:8428
      - 8089:8089
      - 8089:8089/udp
      - 2003:2003
      - 2003:2003/udp
      - 4242:4242
    volumes:
      - vmdata:/storage
    command:
      - "--storageDataPath=/storage"
      - "--graphiteListenAddr=:2003"
      - "--opentsdbListenAddr=:4242"
      - "--httpListenAddr=:8428"
      - "--influxListenAddr=:8089"
      # We're not lolscale. We can lose some in-flight data and this
      # saves the disk constantly churning on writing metrics out.
      - "--inmemoryDataFlushInterval=1h"
      - "--vmalert.proxyURL=http://vmalert:8880"
    networks:
      - monitoring
    restart: unless-stopped

  vmalert:
    container_name: vmalert
    image: victoriametrics/vmalert:v1.96.0
    depends_on:
      - "victoriametrics"
      - "alertmanager"
    ports:
      - 8880:8880
    volumes:
      - ./victoria/alerts.yml:/etc/alerts/alerts.yml
    command:
      - "--datasource.url=http://victoriametrics:8428/"
      - "--remoteRead.url=http://victoriametrics:8428/"
      - "--remoteWrite.url=http://victoriametrics:8428/"
      - "--notifier.url=http://alertmanager:9093/"
      - "--rule=/etc/alerts/*.yml"
    networks:
      - monitoring
    restart: unless-stopped

  alertmanager:
    container_name: alertmanager
    build:
      dockerfile: alertmanager/Dockerfile
    volumes:
      - ./alertmanager/alertmanager.yml:/config/alertmanager.yml
    command:
      - "--config.file=/tmp/alertmanager.yml"
    ports:
      - 9093:9093
    networks:
      - monitoring
    restart: unless-stopped
    secrets:
      - smtp_from
      - smtp_to
      - smtp_smarthost
      - smtp_username
      - smtp_password

  grafana:
    container_name: grafana
    image: grafana/grafana:10.2.3
    depends_on:
      - "victoriametrics"
    ports:
      - 3000:3000
    volumes:
      - grafanadata:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    networks:
      - monitoring
    restart: always

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.systemd'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - monitoring
    restart: unless-stopped

  smartctl-exporter:
    image: prometheuscommunity/smartctl-exporter
    command:
      - '--smartctl.interval=30m'
    privileged: true
    user: root
    ports:
      - 9633:9633
    restart: unless-stopped
    networks:
      - monitoring

volumes:
  vmagentdata: {}
  vmdata: {}
  grafanadata: {}

networks:
  monitoring:

# Switch to docker secrets
secrets:
  smtp_from:
    file: /opt/smtp/from
  smtp_to:
    file: /opt/smtp/to
  smtp_smarthost:
    file: /opt/smtp/smarthost
  smtp_password:
    file: /opt/smtp/password
  smtp_username:
    file: /opt/smtp/username
